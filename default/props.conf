# We will intercep the scheduler log file and use the pop with space method. To stop the cloned sourcetypes hitting this 
# stanza a second time, we rename the log
[source::.../var/log/splunk/scheduler.log]
sourcetype=temporary_sourcetype
TRANSFORMS-change-source=change_source_scheduler, clone_splunkd, set_index_metrics, extract_dimensions_scheduler, build_metric_names_scheduler
TRANSFORMS-do-clone=clone,pop_with_comma,clone,pop_with_comma,clone,pop_with_comma,clone,pop_with_comma,clone,pop_with_comma,clone,pop_with_comma,clone,pop_with_comma,clone,pop_with_comma,clone,pop_with_comma,clone,pop_with_comma,clone,pop_with_comma,clone,pop_with_comma,clone,pop_with_comma,clone,pop_with_comma,clone,pop_with_comma,clone,pop_with_comma
TRANSFORMS-drop-finished=set_st_splunk_metric,drop-finished, set_st_stash

# We will intercep the license log file and use the pop with space method. To stop the cloned sourcetypes hitting this 
# stanza a second time, we rename the log
[source::.../var/log/splunk/license_usage.log]
sourcetype=temporary_sourcetype
TRANSFORMS-change-source=change_source_license, clone_splunkd, set_index_metrics, extract_dimensions, build_metric_names_license_usage
TRANSFORMS-do-clone=clone,pop_with_space,clone,pop_with_space,clone,pop_with_space,clone,pop_with_space,clone,pop_with_space,clone,pop_with_space,clone,pop_with_space,clone,pop_with_space,clone,pop_with_space,clone,pop_with_space,clone,pop_with_space,clone,pop_with_space
TRANSFORMS-drop-finished=set_st_splunk_metric,drop-finished, set_st_stash

# We will intercep the license log file and use the pop with comma method. To stop the cloned sourcetypes hitting this 
# stanza a second time, we rename the log
[source::.../var/log/splunk/metrics.log]
# 09-05-2017 15:24:15.334 +0100 INFO  Metrics - group=thruput, name=thruput, instantaneous_kbps=4.7089794688102, instantaneous_eps=26.420387790645233, average_kbps=1.4262159024796441, total_k_processed=6207, kb=145.97265625, ev=819, load_average=1.96826171875
sourcetype=temporary_sourcetype
TRANSFORMS-change-source=change_source_metrics, clone_splunkd, set_index_metrics, extract_dimensions, build_metric_names_metrics
TRANSFORMS-do-clone=clone,pop_with_comma,clone,pop_with_comma,clone,pop_with_comma,clone,pop_with_comma,clone,pop_with_comma,clone,pop_with_comma,clone,pop_with_comma,clone,pop_with_comma,clone,pop_with_comma,clone,pop_with_comma,clone,pop_with_comma,clone,pop_with_comma,clone,pop_with_comma,clone,pop_with_comma,clone,pop_with_comma,clone,pop_with_comma,clone,pop_with_comma
TRANSFORMS-drop-finished=drop-finished, set_st_stash

# Web perf is a very different log file, it only has two variables which can be made into metrics, viewTime and templateTime
# because of the lack of variety we will process this file differently. We will create two clones and directly translate into a metric
# this requires much less regexing than sticking with the other method.
[source::.../var/log/splunk/web_service.log]
# 2017-09-22 11:06:53,540 INFO	[59c4e0bd7010cf70e10] view:1071 - PERF - viewType=fastpath viewTime=0.0807s templateTime=0.0008s
sourcetype=temporary_sourcetype
TRANSFORMS-change-source=change_source_web_service, clone_splunkd, set_index_metrics, route_to_null, save_perf
TRANSFORMS-do-clone=clone_web_view_time, extract_web_perf_template_time, set_st_splunk_metric,reroute-numbers, set_st_stash

[splunk_metrics_web_view_time]
TRANSFORMS-do-clone=extract_web_perf_view_time, set_st_splunk_metric,reroute-numbers, set_st_stash

[source::.../var/log/introspection/http_event_collector_metrics.log]
TRANSFORMS-change-source=change_st_temporary, change_source_http_event_collector, clone_json_http_event_collector, set_index_metrics, copy_json_meta_to_raw, build_metric_names_http, clear_json_from_meta, extract_dimensions_json
TRANSFORMS-do-clone_json=clone_json,pop_json,clone_json,pop_json,clone_json,pop_json,clone_json,pop_json,clone_json,pop_json,clone_json,pop_json,clone_json,pop_json,clone_json,pop_json,clone_json,pop_json,clone_json,pop_json,clone_json,pop_json,clone_json,pop_json,clone_json,pop_json,clone_json,pop_json,clone_json,pop_json,clone_json,pop_json
TRANSFORMS-drop-finished=drop-finished, set_st_stash

[source::.../var/log/introspection/disk_objects.log]
TRANSFORMS-change-source=change_st_temporary, change_source_disk_objects, clone_json_splunk_disk_objects, set_index_metrics, copy_json_meta_to_raw, build_metric_names_disk_objects, clear_json_from_meta, extract_dimensions_json
TRANSFORMS-do-clone_json=clone_json,pop_json,clone_json,pop_json,clone_json,pop_json,clone_json,pop_json,clone_json,pop_json,clone_json,pop_json,clone_json,pop_json,clone_json,pop_json,clone_json,pop_json,clone_json,pop_json,clone_json,pop_json,clone_json,pop_json,clone_json,pop_json,clone_json,pop_json,clone_json,pop_json,clone_json,pop_json
TRANSFORMS-drop-finished=drop-finished, set_st_stash

[source::convert_to_metric]
TRANSFORMS-value=create_metric_name, create_metric_value, create_dimensions

[source::collect_20_columns]
# 09-05-2017 15:24:15.334 +0100 INFO  Metrics - group=thruput, name=thruput, instantaneous_kbps=4.7089794688102, instantaneous_eps=26.420387790645233, average_kbps=1.4262159024796441, total_k_processed=6207, kb=145.97265625, ev=819, load_average=1.96826171875
TRANSFORMS-change-source=st_to_metric_group,change_source_collect,change_st_temporary,build_metrics_name_collect,extract_collect_dimensions
TRANSFORMS-do-clone=clone,pop_with_comma,clone,pop_with_comma,clone,pop_with_comma,clone,pop_with_comma,clone,pop_with_comma,clone,pop_with_comma,clone,pop_with_comma,clone,pop_with_comma,clone,pop_with_comma,clone,pop_with_comma,clone,pop_with_comma,clone,pop_with_comma,clone,pop_with_comma,clone,pop_with_comma,clone,pop_with_comma,clone,pop_with_comma,clone,pop_with_comma,clone,pop_with_comma,clone,pop_with_comma,clone,pop_with_comma,clone,pop_with_comma,clone
TRANSFORMS-drop-finished=drop-finished, set_st_stash

# All license, metrics and scheduler metrics are given the splunk_metric sourcetype. This stanza expects the event to be formatted
# such that the make_metric transform can be applied. If it isn't applied we will route the event into the metrics_internal_spam index
# where we can evaluate if we could have processed it better
[splunk_metric]
TRANSFORMS-do-get-names=make_metric
TRANSFORMS-drop-finished=drop-finished
TRANSFORMS-drop-non-numbers=reroute-numbers, drop-strings, set_st_stash
KV_MODE = none

[json_metrics_extraction]
INDEXED_EXTRACTIONS=JSON
KV_MODE = none
TRANSFORMS-do-get-names=make_json_metric
TRANSFORMS-drop-finished=drop-finished,drop_top_apps_etc
TRANSFORMS-drop-non-numbers=reroute-numbers, drop-strings, set_st_stash


